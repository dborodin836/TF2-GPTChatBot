name: CI

on:
  push:
    branches: [master, main, v2]
  pull_request:
    branches: [master, main, v2]
  schedule:
    - cron: '0 0 * * 1'

jobs:
  pytest:
    name: Pytest
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: windows-latest
            shell: cmd
            make_install_command: choco install make
            artifact_path: frontend/dist/win-unpacked/
            artifact_name: TF2-GPTChatBot-win-${{ github.sha }}
          - os: ubuntu-latest
            shell: bash
            make_install_command: sudo apt-get install -y make
            artifact_path: frontend/dist/linux-unpacked/
            artifact_name: TF2-GPTChatBot-linux-${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Make
        run: ${{ matrix.make_install_command }}

      - name: Install dependencies
        run: make install SHELL=${{ matrix.shell }}

      - name: Run pytest
        run: pytest . --cov .

      - name: Run pytest (Random)
        run: pytest . --random-order --count 10 --capture=no --cov .

  lint:
    name: back & isort
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run isort check
        run: python -m isort --check-only .

      - name: Run black check
        run: python -m black --check .

  mypy:
    name: mypy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run mypy check
        run: python -m isort --check-only .
